package anything;

import java.util.*;

public class LongestIncreasingSubsequence {
	
	private int array[] = {1, 2, 1, 3, 1, 4, 1, 5, 1, 6, 1, 1, 2, 43, 4, 2, 1, 4 ,100};
	
	public static void main(String[] args) {
		
		LongestIncreasingSubsequence my_tester = new LongestIncreasingSubsequence();
		
		System.out.println(my_tester.len_longest(my_tester.array));
		
	}
	
	private int len_longest(int array[]) {
		
		int lookup[][] = new int[array.length + 1][2];
		
		for(int i=1; i<=array.length; i++) {
			int max_prev[]          = get_max_prev_elems(lookup, array, i);
			int len_longest_subseq  = max_prev[0];
			int prev_elem_in_subseq = max_prev[1];
			lookup[i][0]            = len_longest_subseq + 1;
			lookup[i][1]            = prev_elem_in_subseq;
		}
		
		System.out.println("The longest subsequence is the following: ");
		show_seq(lookup, array);
		return lookup[array.length][0];
	}
	
	private int[] get_max_prev_elems(int lookup[][], int elems[], int curr_index) {
		int max_len       = 0;
		int max_prev_elem = 0;
		for(int i=1; i<curr_index; i++) {
			if(elems[curr_index-1]>elems[i-1] && lookup[i][0]>max_len) {
				max_len       = lookup[i][0];
				max_prev_elem = i;
			}
		}
		int result[] = {max_len, max_prev_elem};
		return result;
	}
	
	private void show_seq(int array[][], int elems[]) {
		for(int i=array.length-1; i>0; ) {
			System.out.print(elems[i-1] + " => ");
			i = array[i][1];
		}
		System.out.println("OVER");
	}

}
